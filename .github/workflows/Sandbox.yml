name: Sandbox

on:
  workflow_dispatch:

jobs:
  
  Setup:
    runs-on: ubuntu-latest
    outputs:
      atom-build-id: ${{ steps.Setup.outputs.atom-build-id }}
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup
        id: Setup
        run: dotnet run --project _atom/_atom.csproj Setup --skip --headless
  
  Diagnostics:
    needs: [ Setup ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Diagnostics
        id: Diagnostics
        run: dotnet run --project _atom/_atom.csproj Diagnostics --skip --headless
  
  OutputValue:
    needs: [ Setup ]
    runs-on: ubuntu-latest
    outputs:
      test-value-1: ${{ steps.OutputValue.outputs.test-value-1 }}
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: OutputValue
        id: OutputValue
        run: dotnet run --project _atom/_atom.csproj OutputValue --skip --headless
  
  InputValue:
    needs: [ Setup, OutputValue ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: InputValue
        id: InputValue
        run: dotnet run --project _atom/_atom.csproj InputValue --skip --headless
        env:
          test-value-1: ${{ needs.OutputValue.outputs.test-value-1 }}
  
  GetVaultSecret:
    needs: [ Setup ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: GetVaultSecret
        id: GetVaultSecret
        run: dotnet run --project _atom/_atom.csproj GetVaultSecret --skip --headless
        env:
          azure-vault-address: ${{ secrets.AZURE_VAULT_ADDRESS }}
          azure-vault-tenant-id: ${{ secrets.AZURE_VAULT_TENANT_ID }}
          azure-vault-app-id: ${{ secrets.AZURE_VAULT_APP_ID }}
          azure-vault-app-secret: ${{ secrets.AZURE_VAULT_APP_SECRET }}
