name: custom-artifact-workflow

on:
  pull_request:
    branches:
      - 'main'

jobs:
  
  SetupBuildInfo:
    runs-on: ubuntu-latest
    outputs:
      build-id: ${{ steps.SetupBuildInfo.outputs.build-id }}
      build-version: ${{ steps.SetupBuildInfo.outputs.build-version }}
      build-timestamp: ${{ steps.SetupBuildInfo.outputs.build-timestamp }}
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: SetupBuildInfo
        id: SetupBuildInfo
        run: dotnet run --project AtomTest/AtomTest.csproj SetupBuildInfo --skip --headless
  
  ArtifactTarget1:
    needs: [ SetupBuildInfo ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: ArtifactTarget1
        id: ArtifactTarget1
        run: dotnet run --project AtomTest/AtomTest.csproj ArtifactTarget1 --skip --headless
      
      - name: StoreArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj StoreArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact1
  
  ArtifactTarget2:
    needs: [ ArtifactTarget1, SetupBuildInfo ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: RetrieveArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj RetrieveArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact1
      
      - name: ArtifactTarget2
        id: ArtifactTarget2
        run: dotnet run --project AtomTest/AtomTest.csproj ArtifactTarget2 --skip --headless
      
      - name: StoreArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj StoreArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact2
          build-slice: Slice1
      
      - name: StoreArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj StoreArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact2
          build-slice: Slice2
  
  ArtifactTarget3:
    needs: [ ArtifactTarget1, ArtifactTarget2, SetupBuildInfo ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: RetrieveArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj RetrieveArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact1
      
      - name: RetrieveArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj RetrieveArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact2
          build-slice: Slice1
      
      - name: RetrieveArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj RetrieveArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact2
          build-slice: Slice2
      
      - name: ArtifactTarget3
        id: ArtifactTarget3
        run: dotnet run --project AtomTest/AtomTest.csproj ArtifactTarget3 --skip --headless
  
  ArtifactTarget4:
    needs: [ ArtifactTarget2, SetupBuildInfo ]
    strategy:
      matrix:
        slice: [ Slice1, Slice2 ]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: RetrieveArtifact
        run: dotnet run --project AtomTest/AtomTest.csproj RetrieveArtifact --skip --headless
        env:
          build-id: ${{ needs.SetupBuildInfo.outputs.build-id }}
          atom-artifacts: TestArtifact2
          build-slice: ${{ matrix.slice }}
      
      - name: ArtifactTarget4
        id: ArtifactTarget4
        run: dotnet run --project AtomTest/AtomTest.csproj ArtifactTarget4 --skip --headless
        env:
          slice: ${{ matrix.slice }}
          build-slice: ${{ matrix.slice }}
