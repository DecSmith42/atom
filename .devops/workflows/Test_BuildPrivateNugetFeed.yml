name: Test_BuildPrivateNugetFeed

variables:
  - group: Atom
trigger: none

jobs:
  
  - job: SetupBuildInfo
    pool:
      vmImage: ubuntu-latest
    steps:
      
      - checkout: self
        fetchDepth: 0
      
      - script: dotnet run --project _atom/_atom.csproj SetupBuildInfo --skip --headless
        name: SetupBuildInfo
        env:
          nuget-dry-run: true
  
  - job: TestPrivateNugetRestore
    pool:
      vmImage: ubuntu-latest
    steps:
      
      - checkout: self
        fetchDepth: 0
      
      - script: dotnet tool install --global DecSm.Atom.Tool --prerelease
        displayName: 'Install atom tool'
      
      - script: |
          atom nuget-add --name "DecSm" --url "https://nuget.pkg.github.com/DecSmith42/index.json"
        displayName: 'Setup NuGet'
        env:
          NUGET_TOKEN_DECSM: $(PRIVATE_NUGET_API_KEY)
        
      - script: dotnet run --project _atom/_atom.csproj TestPrivateNugetRestore --skip --headless
        name: TestPrivateNugetRestore
        env:
          nuget-dry-run: true
  
  - job: PackPrivateTestLib
    pool:
      vmImage: ubuntu-latest
    steps:
      
      - checkout: self
        fetchDepth: 0
      
      - script: dotnet run --project _atom/_atom.csproj PackPrivateTestLib --skip --headless
        name: PackPrivateTestLib
        env:
          nuget-dry-run: true
      
      - task: PublishPipelineArtifact@1
        displayName: PrivateTestLib
        inputs:
          artifactName: PrivateTestLib
          targetPath: "$(Build.BinariesDirectory)/PrivateTestLib"
      
  
  - job: PushToPrivateNuget
    dependsOn: [ PackPrivateTestLib ]
    pool:
      vmImage: ubuntu-latest
    steps:
      
      - checkout: self
        fetchDepth: 0
      
      - task: DownloadPipelineArtifact@2
        displayName: PrivateTestLib
        inputs:
          artifact: PrivateTestLib
          path: "$(Build.ArtifactStagingDirectory)/PrivateTestLib"
      
      - script: dotnet run --project _atom/_atom.csproj PushToPrivateNuget --skip --headless
        name: PushToPrivateNuget
        env:
          azure-vault-app-secret: $(AZURE_VAULT_APP_SECRET)
          azure-vault-address: $(AZURE_VAULT_ADDRESS)
          azure-vault-tenant-id: $(AZURE_VAULT_TENANT_ID)
          azure-vault-app-id: $(AZURE_VAULT_APP_ID)
          private-nuget-api-key: $(PRIVATE_NUGET_API_KEY)
          nuget-dry-run: true
