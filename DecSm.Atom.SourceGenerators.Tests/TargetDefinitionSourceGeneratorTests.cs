namespace DecSm.Atom.SourceGenerators.Tests;

[TestFixture]
public class TargetDefinitionSourceGeneratorTests
{
    [Test]
    public void EmptyDefinition_GeneratesDefaultSource()
    {
        // Arrange
        const string source = """
                              using DecSm.Atom.Build.Definition;

                              namespace TestNamespace;

                              [TargetDefinition]
                              public partial interface ITestTargetDefinition;
                              """;

        var expectedGenerated = """
                                // <auto-generated/>

                                #nullable enable

                                namespace TestNamespace;

                                [JetBrains.Annotations.PublicAPI]
                                partial interface ITestTargetDefinition : DecSm.Atom.Build.Definition.IBuildDefinition
                                {
                                    private Microsoft.Extensions.Logging.ILogger<ITestTargetDefinition> Logger => GetService<Microsoft.Extensions.Logging.ILogger<ITestTargetDefinition>>();
                                    private DecSm.Atom.Paths.IAtomFileSystem FileSystem => GetService<DecSm.Atom.Paths.IAtomFileSystem>();
                                }

                                """.Replace("\r\n", "\n");

        // Act
        var generatedText = TestUtils.GetGeneratedSource<TargetDefinitionSourceGenerator>(source, typeof(BuildDefinition).Assembly);

        // Assert
        TestContext.Out.Write(generatedText);
        generatedText.ShouldBe(expectedGenerated);
    }
}
