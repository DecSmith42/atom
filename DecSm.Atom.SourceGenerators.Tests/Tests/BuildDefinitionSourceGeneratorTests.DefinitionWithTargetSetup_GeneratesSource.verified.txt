// <auto-generated/>

#nullable enable

global using static TestNamespace.TestDefinitionWithSetup;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using DecSm.Atom.Build.Definition;
using DecSm.Atom.Params;
using DecSm.Atom.Paths;
using DecSm.Atom.Process;

namespace TestNamespace;

[JetBrains.Annotations.PublicAPI]
partial class TestDefinitionWithSetup : DecSm.Atom.Build.Definition.IBuildDefinition
{
    // Build has no defined targets

    public TestDefinitionWithSetup(System.IServiceProvider services) : base(services) { }

    private ILogger Logger => Services.GetRequiredService<ILoggerFactory>().CreateLogger("TestNamespace.TestDefinitionWithSetup");

    private IAtomFileSystem FileSystem => GetService<IAtomFileSystem>();

    private IProcessRunner ProcessRunner => GetService<IProcessRunner>();

    private T GetService<T>()
        where T : notnull =>
        typeof(T).GetInterface(nameof(IBuildDefinition)) != null
            ? (T)(IBuildDefinition)this
            : Services.GetRequiredService<T>();

   private IEnumerable<T> GetServices<T>()
        where T : notnull =>
        typeof(T).GetInterface(nameof(IBuildDefinition)) != null
            ? [(T)(IBuildDefinition)this]
            : Services.GetServices<T>();

    [return: NotNullIfNotNull(nameof(defaultValue))]
    private T? GetParam<T>(Expression<Func<T?>> parameterExpression, T? defaultValue = default, Func<string?, T?>? converter = null) =>
        Services
            .GetRequiredService<IParamService>()
            .GetParam(parameterExpression, defaultValue, converter);


    public override System.Collections.Generic.IReadOnlyDictionary<string, DecSm.Atom.Build.Definition.Target> TargetDefinitions { get; } = new System.Collections.Generic.Dictionary<string, DecSm.Atom.Build.Definition.Target>();

    public override System.Collections.Generic.IReadOnlyDictionary<string, DecSm.Atom.Params.ParamDefinition> ParamDefinitions { get; } = new System.Collections.Generic.Dictionary<string, DecSm.Atom.Params.ParamDefinition>();

    // Build has no defined targets

    // Build has no defined params

    // Build has no defined HostBuilder configuration

    // Build has no defined Host configuration
}
